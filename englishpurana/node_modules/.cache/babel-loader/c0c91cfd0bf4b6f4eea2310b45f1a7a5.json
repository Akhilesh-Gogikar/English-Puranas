{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\English-Puranas\\\\englishpurana\\\\src\\\\components\\\\index.js\",\n    _s = $RefreshSig$();\n\n// Create an index page which has a list of puranas\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\n// and a button to start reading from the first page\n// our choice should be saved in the app state in redux\n// The app state will be used to show the appropriate contents\nimport '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { setPage } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport GoogleAd from './googleAds';\nimport logo from '../logo.png';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport database from \"./firebaseDB\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PuranaIndex({\n  propOne,\n  setPage\n}) {\n  _s();\n\n  const [userdata, setUserData] = useState({});\n  const [karma, setKarma] = useState(0);\n  useEffect(() => {\n    if (propOne === \"\") {\n      history.push('login');\n    }\n  }, []);\n  console.log(propOne);\n  const history = useHistory();\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\");\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\");\n  const [puranas, setPuranas] = useState({\n    'puranas': []\n  });\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({\n    'text': []\n  });\n  const [elements, setElements] = useState([]);\n  const [purana, setPurana] = useState([]);\n  const [title, setTitle] = useState('Puranas');\n  useEffect(() => {\n    if (propOne != \"\") {\n      console.log(\"Creating a new user in rtdb\");\n      const userRef = database.ref('users');\n      userRef.orderByChild(\"uid\").equalTo(propOne.uid).once(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          const userData = snapshot.val();\n          console.log(\"exists!\");\n          setUserData(userData);\n\n          for (let id in userData) {\n            console.log(userData[id]);\n            setKarma(userData[id].karma);\n          }\n        } else {\n          const data = {\n            displayName: propOne.displayName,\n            email: propOne.email,\n            photoURL: propOne.photoURL,\n            uid: propOne.uid,\n            phoneNumber: propOne.phoneNumber,\n            karma: 0,\n            session: [],\n            ts: Date.now()\n          };\n          userRef.push(data);\n          setUserData(data);\n        }\n      });\n    }\n  }, [userdata, propOne]);\n\n  const goNext = props => {\n    let path = `puranas`;\n\n    if (props && items.hasOwnProperty(props.title)) {\n      setElements(items[props.title]);\n    } else {\n      // console.log(\"Check for chapters passed\")\n      if (props) {\n        // console.log(propOne)\n        setPage(props.index);\n        history.push(path);\n      } else {\n        setPage('1');\n        history.push(path);\n      } // Set the state in redux to the chapter in puran and redirect to /puranas\n\n    }\n  };\n\n  useEffect(() => {\n    fetch(purl).then(res => res.json()).then(result => {\n      // console.log(result)\n      setPuranas(result);\n      setElements(puranas.puranas); // console.log(elements)\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n    });\n  }, [purl]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [url]); // console.log('Puranas')\n  // console.log(puranas.puranas)\n\n  const goBack = () => {\n    setElements(puranas.puranas);\n  }; //\n  // console.log('Index')\n  // console.log(items)\n\n\n  if (elements.length == 18) {\n    var container = \"container\";\n  } else {\n    var container = \"\";\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"AppHeader\",\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"warning\",\n        variant: \"light\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: logo,\n          width: \"70\",\n          height: \"70\",\n          className: \"d-inline-block align-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/index\",\n          children: \"Simple Puranas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            type: \"button\",\n            className: \"btn btn-link\",\n            style: {\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"about\",\n              style: {\n                color: \"Brown\"\n              },\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            type: \"button\",\n            className: \"btn btn-success\",\n            style: {\n              color: \"white\"\n            },\n            children: [\"Karma Points\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#login\",\n              className: \"mb-0 h1\",\n              style: {\n                color: \"white\"\n              },\n              children: karma\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              src: propOne.photoURL,\n              width: \"50\",\n              height: \"50\",\n              class: \"\",\n              className: \"d-inline-block align-top\",\n              style: {\n                borderRadius: \"50%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 5\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#login\",\n              children: propOne.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GoogleAd, {\n        slot: \"4653616521\",\n        timeout: 1000,\n        classNames: \"page-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          value: \"Start Reading\",\n          onClick: () => goNext()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          value: \"Index\",\n          onClick: () => goBack()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: container,\n          children: elements.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              className: \"btn btn-dark\",\n              value: notification.index,\n              onClick: () => goNext(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              value: notification.title,\n              onClick: () => goNext(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 130\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 65\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GoogleAd, {\n        slot: \"9722659117\",\n        timeout: 1000,\n        classNames: \"page-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PuranaIndex, \"3z2/rgrlGor6pyNLEVY7zGO4WAc=\", false, function () {\n  return [useHistory];\n});\n\n_c = PuranaIndex;\n\nfunction mapStateToProps(state) {\n  console.log(state.stateManager);\n  return {\n    propOne: state.stateManager.userId\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setPage\n})(PuranaIndex);\n\nvar _c;\n\n$RefreshReg$(_c, \"PuranaIndex\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/English-Puranas/englishpurana/src/components/index.js"],"names":["React","useState","useEffect","Button","connect","setPage","useHistory","GoogleAd","logo","Navbar","database","PuranaIndex","propOne","userdata","setUserData","karma","setKarma","history","push","console","log","url","setUrl","purl","setPurl","puranas","setPuranas","error","setError","isLoaded","setIsLoaded","items","setItems","elements","setElements","purana","setPurana","title","setTitle","userRef","ref","orderByChild","equalTo","uid","once","snapshot","exists","userData","val","id","data","displayName","email","photoURL","phoneNumber","session","ts","Date","now","goNext","props","path","hasOwnProperty","index","fetch","then","res","json","result","goBack","length","container","message","color","borderRadius","map","notification","mapStateToProps","state","stateManager","userId"],"mappings":"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","sourcesContent":["// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nimport logo from '../logo.png';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport database from \"./firebaseDB\"\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  const [userdata, setUserData] = useState({});\r\n  const [karma, setKarma] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (propOne === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  useEffect(() => {\r\n  if (propOne != \"\"){\r\n    console.log(\"Creating a new user in rtdb\")\r\n\r\n      const userRef = database.ref('users')\r\n\r\n      userRef.orderByChild(\"uid\").equalTo(propOne.uid).once(\"value\",snapshot => {\r\n      if (snapshot.exists()){\r\n        const userData = snapshot.val();\r\n        console.log(\"exists!\");\r\n        setUserData(userData);\r\n        for (let id in userData){\r\n          console.log(userData[id]);\r\n          setKarma(userData[id].karma);\r\n        }\r\n\r\n      } else {\r\n\r\n        const data = {\r\n          displayName: propOne.displayName,\r\n          email: propOne.email,\r\n          photoURL: propOne.photoURL,\r\n          uid: propOne.uid,\r\n          phoneNumber: propOne.phoneNumber,\r\n          karma:0,\r\n          session:[],\r\n          ts:Date.now()\r\n        }\r\n        userRef.push(data)\r\n        setUserData(data);\r\n      }\r\n  });\r\n\r\n  }\r\n}, [userdata, propOne])\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      // console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        // console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if(elements.length==18){\r\n    var container=\"container\"\r\n  } else {\r\n    var container = \"\"\r\n  }\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n      <Navbar bg=\"warning\" variant=\"light\">\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"70\"\r\n        height=\"70\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n      <Navbar.Brand href=\"/index\" >\r\n\r\n        Simple Puranas\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n    <Navbar.Collapse className=\"justify-content-end\">\r\n    <Navbar.Brand type=\"button\" className=\"btn btn-link\" style={{color:\"white\"}}>\r\n    <a href=\"about\" style={{color:\"Brown\"}}>About</a>\r\n    </Navbar.Brand>\r\n    <Navbar.Text>\r\n&nbsp;&nbsp;\r\n    </Navbar.Text>\r\n    <Navbar.Text type=\"button\" className=\"btn btn-success\" style={{color:\"white\"}}>\r\n    Karma Points<br/><a href=\"#login\" className=\"mb-0 h1\" style={{color:\"white\"}}>{karma}</a>\r\n    </Navbar.Text>\r\n    <Navbar.Text>\r\n&nbsp;&nbsp;\r\n    </Navbar.Text>\r\n    <Navbar.Text>\r\n&nbsp;&nbsp;\r\n    </Navbar.Text>\r\n    <Navbar.Text>\r\n    <img\r\n      alt=\"\"\r\n      src={propOne.photoURL}\r\n      width=\"50\"\r\n      height=\"50\"\r\n      class=\"\"\r\n      className=\"d-inline-block align-top\"\r\n      style={{borderRadius: \"50%\"}}\r\n    />{' '}\r\n    <br />\r\n    <a href=\"#login\">{propOne.displayName}</a>\r\n    </Navbar.Text>\r\n\r\n    </Navbar.Collapse>\r\n    </Navbar>\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <input type=\"button\" className=\"btn btn-warning\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div className={container}>{ elements.map(notification => <div><p>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </p><input type=\"button\" className=\"btn btn-dark\" value={ notification.index } onClick={() => goNext(notification)}></input>\r\n      <input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n"]},"metadata":{},"sourceType":"module"}