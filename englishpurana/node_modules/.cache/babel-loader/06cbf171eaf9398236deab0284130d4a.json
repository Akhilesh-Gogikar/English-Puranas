{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\English-Puranas\\\\englishpurana\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { FirebaseAuthProvider, FirebaseAuthConsumer, IfFirebaseAuthed, IfFirebaseAuthedAnd } from \"@react-firebase/auth\";\nimport { config } from \"../config\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { updateUserId } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./login.css\";\nimport '../App.css';\nimport logo from '../logo.png';\nimport { FirebaseDatabaseProvider, FirebaseDatabaseMutation } from \"@react-firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  propOne,\n  updateUserId\n}) {\n  _s();\n\n  // Write a function to save login credentials into the redux\n  const [userdata, setUserdata] = useState(null);\n  const history = useHistory();\n\n  const goHome = () => {\n    history.push('index');\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  } else {\n    firebase.app(); // if already initialized, use that one\n  }\n\n  const updateUser = ({\n    user\n  }) => {\n    const userRef = firebase.database().ref('users');\n    userRef.push(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FirebaseAuthProvider, { ...config,\n        firebase: firebase,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: () => {\n              const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n              firebase.auth().signInWithPopup(googleAuthProvider);\n            },\n            children: \"Sign In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FirebaseAuthConsumer, {\n            children: ({\n              isSignedIn,\n              user,\n              providerId\n            }) => {\n              console.log(isSignedIn);\n\n              if (isSignedIn && userdata == null) {\n                console.log(user);\n                setUserdata(user);\n                console.log(userdata);\n                updateUserId(user);\n                updateUser(user);\n              } //\n\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IfFirebaseAuthed, {\n              children: () => {\n                // goHome();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"You are authenticated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"button\",\n                    className: \"btn btn-primary\",\n                    value: \"Continue\",\n                    onClick: goHome\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 22\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"ekL4sxVZboDco/oWzdxQyJkzmXs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  console.log(state.stateManager);\n  return {\n    propOne: state.stateManager\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateUserId\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/English-Puranas/englishpurana/src/components/login.js"],"names":["React","useState","render","firebase","FirebaseAuthProvider","FirebaseAuthConsumer","IfFirebaseAuthed","IfFirebaseAuthedAnd","config","Form","Button","connect","updateUserId","useHistory","logo","FirebaseDatabaseProvider","FirebaseDatabaseMutation","Login","propOne","userdata","setUserdata","history","goHome","push","apps","length","initializeApp","app","updateUser","user","userRef","database","ref","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","isSignedIn","providerId","console","log","mapStateToProps","state","stateManager"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,gBAHF,EAIEC,mBAJF,QAKO,sBALP;AAMA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,aAAP;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,wBAAT,EAAmCC,wBAAnC,QAAmE,0BAAnE;;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,OAAD;AAAUN,EAAAA;AAAV,CAAf,EAAwC;AAAA;;AAEtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMoB,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,MAAM,GAAG,MAAM;AACnBD,IAAAA,OAAO,CAACE,IAAR,CAAa,OAAb;AACD,GAFD;;AAIA,MAAI,CAACpB,QAAQ,CAACqB,IAAT,CAAcC,MAAnB,EAA2B;AACxBtB,IAAAA,QAAQ,CAACuB,aAAT,CAAuBlB,MAAvB;AACF,GAFD,MAEM;AACHL,IAAAA,QAAQ,CAACwB,GAAT,GADG,CACa;AAClB;;AAED,QAAMC,UAAU,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY;AAC7B,UAAMC,OAAO,GAAG3B,QAAQ,CAAC4B,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACP,IAAR,CAAaM,IAAb;AACD,GAHD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACA;AAAK,QAAA,GAAG,EAAEf,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADA,eAEE,QAAC,oBAAD,OAA0BN,MAA1B;AAAkC,QAAA,QAAQ,EAAEL,QAA5C;AAAA,+BACA;AAAA,kCACA;AAAA,mCACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADA,eAME;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AACE,YAAA,OAAO,EAAE,MAAM;AACb,oBAAM8B,kBAAkB,GAAG,IAAI9B,QAAQ,CAAC+B,IAAT,CAAcC,kBAAlB,EAA3B;AACAhC,cAAAA,QAAQ,CAAC+B,IAAT,GAAgBE,eAAhB,CAAgCH,kBAAhC;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAcE,QAAC,oBAAD;AAAA,sBACG,CAAC;AAAEI,cAAAA,UAAF;AAAcR,cAAAA,IAAd;AAAoBS,cAAAA;AAApB,aAAD,KAAsC;AACrCC,cAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AACA,kBAAGA,UAAU,IAAIlB,QAAQ,IAAE,IAA3B,EAAgC;AAC9BoB,gBAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAT,gBAAAA,WAAW,CAACS,IAAD,CAAX;AACAU,gBAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;AACAP,gBAAAA,YAAY,CAACiB,IAAD,CAAZ;AACAD,gBAAAA,UAAU,CAACC,IAAD,CAAV;AACD,eARoC,CASrC;;AAED;AAZH;AAAA;AAAA;AAAA;AAAA,kBAdF,eA4BE;AAAA,mCACE,QAAC,gBAAD;AAAA,wBACG,MAAM;AACL;AACA,oCAAO;AAAA,0CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,eACP;AAAO,oBAAA,IAAI,EAAC,QAAZ;AAAqB,oBAAA,SAAS,EAAC,iBAA/B;AAAiD,oBAAA,KAAK,EAAC,UAAvD;AAAkE,oBAAA,OAAO,EAAEP;AAA3E;AAAA;AAAA;AAAA;AAAA,0BADO;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AAGD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GAxEQL,K;UAKSJ,U;;;KALTI,K;;AA0ET,SAASwB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,YAAlB;AACA,SAAO;AAAEzB,IAAAA,OAAO,EAAEwB,KAAK,CAACC;AAAjB,GAAP;AACD;;AAED,eAAehC,OAAO,CAAC8B,eAAD,EAAkB;AAAC7B,EAAAA;AAAD,CAAlB,CAAP,CAAyCK,KAAzC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserId } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport '../App.css';\r\nimport logo from '../logo.png';\r\nimport { FirebaseDatabaseProvider, FirebaseDatabaseMutation } from \"@react-firebase/database\";\r\n\r\nfunction Login({propOne, updateUserId}) {\r\n\r\n  // Write a function to save login credentials into the redux\r\n  const [userdata, setUserdata] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('index');\r\n  }\r\n\r\n  if (!firebase.apps.length) {\r\n     firebase.initializeApp(config);\r\n  }else {\r\n     firebase.app(); // if already initialized, use that one\r\n  }\r\n\r\n  const updateUser = ({user}) => {\r\n    const userRef = firebase.database().ref('users');\r\n    userRef.push(user);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            console.log(isSignedIn);\r\n            if(isSignedIn && userdata==null){\r\n              console.log(user);\r\n              setUserdata(user);\r\n              console.log(userdata)\r\n              updateUserId(user);\r\n              updateUser(user);\r\n            }\r\n            //\r\n\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              // goHome();\r\n              return <div><p>You are authenticated</p>\r\n              <input type=\"button\" className=\"btn btn-primary\" value=\"Continue\" onClick={goHome}></input>\r\n          </div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateUserId})(Login)\r\n"]},"metadata":{},"sourceType":"module"}