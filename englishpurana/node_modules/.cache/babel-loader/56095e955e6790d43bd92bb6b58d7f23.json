{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\English-Puranas\\\\englishpurana\\\\src\\\\components\\\\index.js\",\n    _s = $RefreshSig$();\n\n// Create an index page which has a list of puranas\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\n// and a button to start reading from the first page\n// our choice should be saved in the app state in redux\n// The app state will be used to show the appropriate contents\nimport '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { setPage } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport GoogleAd from './googleAds';\nimport logo from '../logo.png';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PuranaIndex({\n  propOne,\n  setPage\n}) {\n  _s();\n\n  useEffect(() => {\n    if (propOne === \"\") {\n      history.push('login');\n    }\n  }, []);\n  console.log(propOne);\n  const history = useHistory();\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\");\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\");\n  const [puranas, setPuranas] = useState({\n    'puranas': []\n  });\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({\n    'text': []\n  });\n  const [elements, setElements] = useState([]);\n  const [purana, setPurana] = useState([]);\n  const [title, setTitle] = useState('Puranas');\n\n  const goNext = props => {\n    let path = `puranas`;\n\n    if (props && items.hasOwnProperty(props.title)) {\n      setElements(items[props.title]);\n    } else {\n      // console.log(\"Check for chapters passed\")\n      if (props) {\n        // console.log(propOne)\n        setPage(props.index);\n        history.push(path);\n      } else {\n        setPage('1');\n        history.push(path);\n      } // Set the state in redux to the chapter in puran and redirect to /puranas\n\n    }\n  };\n\n  useEffect(() => {\n    fetch(purl).then(res => res.json()).then(result => {\n      // console.log(result)\n      setPuranas(result);\n      setElements(puranas.puranas); // console.log(elements)\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n    });\n  }, [purl]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [url]); // console.log('Puranas')\n  // console.log(puranas.puranas)\n\n  const goBack = () => {\n    setElements(puranas.puranas);\n  }; //\n  // console.log('Index')\n  // console.log(items)\n\n\n  if (elements.length == 18) {\n    var container = \"container\";\n  } else {\n    var container = \"\";\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"AppHeader\",\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"warning\",\n        variant: \"light\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: logo,\n            width: \"30\",\n            height: \"30\",\n            className: \"d-inline-block align-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this), ' ', \"Simple Puranas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: [\"Signed in as: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#login\",\n              children: propOne.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GoogleAd, {\n        slot: \"4653616521\",\n        timeout: 1000,\n        classNames: \"page-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red-text-shadow\",\n          style: {\n            textDecoration: \"underline\"\n          },\n          children: \"Simple Puranas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          value: \"Start Reading\",\n          onClick: () => goNext()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          value: \"Index\",\n          onClick: () => goBack()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: container,\n          children: elements.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              className: \"btn btn-black\",\n              value: notification.index,\n              onClick: () => goNext(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              value: notification.title,\n              onClick: () => goNext(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 130\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 65\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GoogleAd, {\n        slot: \"9722659117\",\n        timeout: 1000,\n        classNames: \"page-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PuranaIndex, \"Px87ivZGA9pQi3JJbfC5bmkgmM0=\", false, function () {\n  return [useHistory];\n});\n\n_c = PuranaIndex;\n\nfunction mapStateToProps(state) {\n  console.log(state.stateManager);\n  return {\n    propOne: state.stateManager.userId\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setPage\n})(PuranaIndex);\n\nvar _c;\n\n$RefreshReg$(_c, \"PuranaIndex\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/English-Puranas/englishpurana/src/components/index.js"],"names":["React","useState","useEffect","Button","connect","setPage","useHistory","GoogleAd","logo","Navbar","PuranaIndex","propOne","history","push","console","log","url","setUrl","purl","setPurl","puranas","setPuranas","error","setError","isLoaded","setIsLoaded","items","setItems","elements","setElements","purana","setPurana","title","setTitle","goNext","props","path","hasOwnProperty","index","fetch","then","res","json","result","goBack","length","container","message","displayName","textDecoration","map","notification","mapStateToProps","state","stateManager","userId"],"mappings":"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","sourcesContent":["// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nimport logo from '../logo.png';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  useEffect(() => {\r\n    if (propOne === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      // console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        // console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if(elements.length==18){\r\n    var container=\"container\"\r\n  } else {\r\n    var container = \"\"\r\n  }\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n      <Navbar bg=\"warning\" variant=\"light\">\r\n      <Navbar.Brand href=\"/\" >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n        Simple Puranas\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n    <Navbar.Collapse className=\"justify-content-end\">\r\n      <Navbar.Text>\r\n      Signed in as: <a href=\"#login\">{propOne.displayName}</a>\r\n      </Navbar.Text>\r\n    </Navbar.Collapse>\r\n    </Navbar>\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <p className='red-text-shadow' style={{textDecoration:\"underline\"}}>Simple Puranas</p>\r\n\r\n      <input type=\"button\" className=\"btn btn-warning\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div className={container}>{ elements.map(notification => <div><p>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </p><input type=\"button\" className=\"btn btn-black\" value={ notification.index } onClick={() => goNext(notification)}></input>\r\n      <input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n"]},"metadata":{},"sourceType":"module"}