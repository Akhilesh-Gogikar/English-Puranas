{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\Puranas\\\\english-purana\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { FirebaseAuthProvider, FirebaseAuthConsumer, IfFirebaseAuthed, IfFirebaseAuthedAnd } from \"@react-firebase/auth\";\nimport { config } from \"../config\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { setPage, updateSession } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  } // Write a function to save login credentials into the redux\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FirebaseAuthProvider, { ...config,\n      firebase: firebase,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => {\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n            firebase.auth().signInWithPopup(googleAuthProvider);\n          },\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          \"data-testid\": \"signin-anon\",\n          onClick: () => {\n            firebase.auth().signInAnonymously();\n          },\n          children: \"Sign In Anonymously\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FirebaseAuthConsumer, {\n          children: ({\n            isSignedIn,\n            user,\n            providerId\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"pre\", {\n              style: {\n                height: 300,\n                overflow: \"auto\"\n              },\n              children: JSON.stringify({\n                isSignedIn,\n                user,\n                providerId\n              }, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(IfFirebaseAuthed, {\n            children: () => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"You are authenticated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 22\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IfFirebaseAuthedAnd, {\n            filter: ({\n              providerId\n            }) => providerId !== \"anonymous\",\n            children: ({\n              providerId\n            }) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"You are authenticated with \", providerId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 22\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  console.log(state.stateManager);\n  return {\n    propOne: state.stateManager\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setPage\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/Puranas/english-purana/src/components/login.js"],"names":["React","useState","render","firebase","FirebaseAuthProvider","FirebaseAuthConsumer","IfFirebaseAuthed","IfFirebaseAuthedAnd","config","Form","Button","connect","setPage","updateSession","useHistory","Login","email","setEmail","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","e","target","value","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","signInAnonymously","isSignedIn","user","providerId","height","overflow","JSON","stringify","mapStateToProps","state","console","log","stateManager","propOne"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage, updateSession } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  // Write a function to save login credentials into the redux\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        &nbsp;&nbsp;&nbsp;\r\n        <button\r\n        className=\"btn btn-danger\"\r\n          data-testid=\"signin-anon\"\r\n          onClick={() => {\r\n            firebase.auth().signInAnonymously();\r\n          }}\r\n        >\r\n          Sign In Anonymously\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            return (\r\n              <pre style={{ height: 300, overflow: \"auto\" }}>\r\n                {JSON.stringify({ isSignedIn, user, providerId }, null, 2)}\r\n              </pre>\r\n            );\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              return <div>You are authenticated</div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n          <IfFirebaseAuthedAnd\r\n            filter={({ providerId }) => providerId !== \"anonymous\"}\r\n          >\r\n            {({ providerId }) => {\r\n              return <div>You are authenticated with {providerId}</div>;\r\n            }}\r\n          </IfFirebaseAuthedAnd>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(Login)\r\n"]},"metadata":{},"sourceType":"module"}