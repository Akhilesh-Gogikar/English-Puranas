{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\Puranas\\\\english-purana\\\\src\\\\components\\\\index.js\",\n    _s = $RefreshSig$();\n\n// Create an index page which has a list of puranas\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\n// and a button to start reading from the first page\n// our choice should be saved in the app state in redux\n// The app state will be used to show the appropriate contents\nimport '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { setPage } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport GoogleAd from './googleAds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PuranaIndex({\n  propOne,\n  setPage\n}) {\n  _s();\n\n  console.log(propOne);\n  const history = useHistory();\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\");\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\");\n  const [puranas, setPuranas] = useState({\n    'puranas': []\n  });\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({\n    'text': []\n  });\n  const [elements, setElements] = useState([]);\n  const [purana, setPurana] = useState([]);\n  const [title, setTitle] = useState('Puranas');\n\n  const goNext = props => {\n    let path = `puranas`;\n\n    if (props && items.hasOwnProperty(props.title)) {\n      setElements(items[props.title]);\n    } else {\n      console.log(\"Check for chapters passed\");\n\n      if (props) {\n        console.log(propOne);\n        setPage(props.index);\n        history.push(path);\n      } else {\n        setPage('1');\n        history.push(path);\n      } // Set the state in redux to the chapter in puran and redirect to /puranas\n\n    }\n  };\n\n  useEffect(() => {\n    fetch(purl).then(res => res.json()).then(result => {\n      // console.log(result)\n      setPuranas(result);\n      setElements(puranas.puranas); // console.log(elements)\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n    });\n  }, [purl]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [url]); // console.log('Puranas')\n  // console.log(puranas.puranas)\n\n  const goBack = () => {\n    setElements(puranas.puranas);\n  }; //\n  // console.log('Index')\n  // console.log(items)\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"AppHeader\",\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleAd, {\n        slot: \"4653616521\",\n        timeout: 1000,\n        classNames: \"page-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red-text-shadow\",\n          style: {\n            textDecoration: \"underline\"\n          },\n          children: \"Puranas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          value: \"Start Reading\",\n          onClick: () => goNext()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          value: \"Index\",\n          onClick: () => goBack()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: elements.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              value: notification.title,\n              onClick: () => goNext(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 171\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 43\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GoogleAd, {\n        slot: \"9722659117\",\n        timeout: 1000,\n        classNames: \"page-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PuranaIndex, \"IZICOMdsqsx6ibYS6Mq/7cmSJ/k=\", false, function () {\n  return [useHistory];\n});\n\n_c = PuranaIndex;\n\nfunction mapStateToProps(state) {\n  console.log(state.stateManager);\n  return {\n    page: state.stateManager.currentPage,\n    userid: state.stateManager.userId\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setPage\n})(PuranaIndex);\n\nvar _c;\n\n$RefreshReg$(_c, \"PuranaIndex\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/Puranas/english-purana/src/components/index.js"],"names":["React","useState","useEffect","Button","connect","setPage","useHistory","GoogleAd","PuranaIndex","propOne","console","log","history","url","setUrl","purl","setPurl","puranas","setPuranas","error","setError","isLoaded","setIsLoaded","items","setItems","elements","setElements","purana","setPurana","title","setTitle","goNext","props","path","hasOwnProperty","index","push","fetch","then","res","json","result","goBack","message","textDecoration","map","notification","mapStateToProps","state","stateManager","page","currentPage","userid","userId"],"mappings":"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","sourcesContent":["// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n\r\n      <p className='red-text-shadow' style={{textDecoration:\"underline\"}}>Puranas</p>\r\n\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div>{ elements.map(notification => <div><input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { page: state.stateManager.currentPage, userid: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n"]},"metadata":{},"sourceType":"module"}