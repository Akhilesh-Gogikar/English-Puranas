{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\Puranas\\\\english-purana\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas_jsons/1.1.1.json\");\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // pause audio sound\n\n  const pauseSound = () => {}; // stop audio sound\n\n\n  const playSound = () => {}; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(result => {\n      console.log(result);\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"AppHeader\",\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red-text-shadow\",\n          children: items.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red-text-shadow\",\n          children: items.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Music\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-primary mr-2\",\n            value: \"Play Music\",\n            onClick: playSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-danger mr-2\",\n            value: \"Pause Music\",\n            onClick: pauseSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"6I0AbohVWXiAD9P3W8T7hhJEGJw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/Puranas/english-purana/src/App.js"],"names":["React","useState","useEffect","App","url","setUrl","error","setError","isLoaded","setIsLoaded","items","setItems","pauseSound","playSound","fetch","then","res","json","result","console","log","message","title","text"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,oGAAD,CAA9B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CALa,CAOb;;AACA,QAAMW,UAAU,GAAG,MAAM,CACxB,CADD,CARa,CAWb;;;AACA,QAAMC,SAAS,GAAG,MAAM,CACvB,CADD,CAZa,CAeb;AACA;AACA;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACV,GAAD,CAAL,CACGW,IADH,CACSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,KAPL,EAQI;AACA;AACA;AACCZ,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAdL;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACP;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA,8BAAsCA,KAAK,CAACe,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAAP;AAID,GALD,MAKO,IAAI,CAACb,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA,oBAAgCE,KAAK,CAACY;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA,oBAAgCZ,KAAK,CAACa;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAIA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCAEF;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAC,sBAA/B;AAAsD,YAAA,KAAK,EAAC,YAA5D;AAAyE,YAAA,OAAO,EAAEV;AAAlF;AAAA;AAAA;AAAA;AAAA,kBAFE,eAIA;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAC,qBAA/B;AAAqD,YAAA,KAAK,EAAC,aAA3D;AAAyE,YAAA,OAAO,EAAED;AAAlF;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;AACF;;GA/DQT,G;;KAAAA,G;AAiET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas_jsons/1.1.1.json\")\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // pause audio sound\n  const pauseSound = () => {\n  }\n\n  // stop audio sound\n  const playSound = () => {\n  }\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(url)\n      .then( res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if (error) {\n    return <div className='App' >\n    <header className=\"AppHeader\">Error: {error.message}\n    </header>\n    </div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className='App' >\n      <header className=\"App-header\">\n      <p className='red-text-shadow'>{items.title}</p>\n      <p className='red-text-shadow'>{items.text}</p>\n\n      <div className=\"Music\">\n\n    <input type=\"button\" className=\"btn btn-primary mr-2\" value=\"Play Music\" onClick={playSound}></input>\n\n      <input type=\"button\" className=\"btn btn-danger mr-2\" value=\"Pause Music\" onClick={pauseSound}></input>\n\n    </div>\n\n      </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}