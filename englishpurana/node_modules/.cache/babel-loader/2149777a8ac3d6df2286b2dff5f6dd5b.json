{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gogik\\\\PycharmProjects\\\\Puranas\\\\english-purana\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { FirebaseAuthProvider, FirebaseAuthConsumer, IfFirebaseAuthed, IfFirebaseAuthedAnd } from \"@react-firebase/auth\";\nimport { config } from \"../config\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport { updateUserId } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  // Write a function to save login credentials into the redux\n  const history = useHistory();\n\n  const goHome = () => {\n    history.push('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(FirebaseAuthProvider, { ...config,\n      firebase: firebase,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => {\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n            firebase.auth().signInWithPopup(googleAuthProvider);\n            updateUserId(user);\n            goHome();\n          },\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FirebaseAuthConsumer, {\n          children: ({\n            isSignedIn,\n            user,\n            providerId\n          }) => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IfFirebaseAuthed, {\n            children: () => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"You are authenticated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 22\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  console.log(state.stateManager);\n  return {\n    propOne: state.stateManager\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateUserId\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/gogik/PycharmProjects/Puranas/english-purana/src/components/login.js"],"names":["React","useState","render","firebase","FirebaseAuthProvider","FirebaseAuthConsumer","IfFirebaseAuthed","IfFirebaseAuthedAnd","config","Form","Button","connect","updateUserId","useHistory","Login","history","goHome","push","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","user","isSignedIn","providerId","mapStateToProps","state","console","log","stateManager","propOne"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,gBAHF,EAIEC,mBAJF,QAKO,sBALP;AAMA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf;AAEA,QAAMC,OAAO,GAAGF,UAAU,EAA1B;;AAEA,QAAMG,MAAM,GAAG,MAAM;AACnBD,IAAAA,OAAO,CAACE,IAAR,CAAa,EAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE,QAAC,oBAAD,OAA0BT,MAA1B;AAAkC,MAAA,QAAQ,EAAEL,QAA5C;AAAA,6BACA;AAAA,gCACA;AAAA,iCACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADA,eAME;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AACE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMe,kBAAkB,GAAG,IAAIf,QAAQ,CAACgB,IAAT,CAAcC,kBAAlB,EAA3B;AACAjB,YAAAA,QAAQ,CAACgB,IAAT,GAAgBE,eAAhB,CAAgCH,kBAAhC;AACAN,YAAAA,YAAY,CAACU,IAAD,CAAZ;AACAN,YAAAA,MAAM;AACP,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAgBE,QAAC,oBAAD;AAAA,oBACG,CAAC;AAAEO,YAAAA,UAAF;AAAcD,YAAAA,IAAd;AAAoBE,YAAAA;AAApB,WAAD,KAAsC,CAGtC;AAJH;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAsBE;AAAA,iCACE,QAAC,gBAAD;AAAA,sBACG,MAAM;AACL,kCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;AAHH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA9CQV,K;UAISD,U;;;KAJTC,K;;AAgDT,SAASW,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,YAAlB;AACA,SAAO;AAAEC,IAAAA,OAAO,EAAEJ,KAAK,CAACG;AAAjB,GAAP;AACD;;AAED,eAAelB,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAyCE,KAAzC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserId } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nfunction Login() {\r\n\r\n  // Write a function to save login credentials into the redux\r\n\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n            updateUserId(user);\r\n            goHome();\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n\r\n\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              return <div>You are authenticated</div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateUserId})(Login)\r\n"]},"metadata":{},"sourceType":"module"}