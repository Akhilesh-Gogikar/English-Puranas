[{"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\index.js":"1","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\reportWebVitals.js":"2","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\App.js":"3","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\main.js":"4","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\login.js":"5","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\index.js":"6","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\puranas.js":"7","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\config.js":"8","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\home.js":"9","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actions.js":"10","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\selectors.js":"11","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actionTypes.js":"12","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\store.js":"13","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\index.js":"14","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\stateManager.js":"15","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\googleAds.js":"16","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\index.js":"17","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\App.js":"18","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\reportWebVitals.js":"19","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\main.js":"20","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\login.js":"21","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\store.js":"22","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\puranas.js":"23","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\index.js":"24","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\home.js":"25","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\config.js":"26","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actions.js":"27","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\selectors.js":"28","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\googleAds.js":"29","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\index.js":"30","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actionTypes.js":"31","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\stateManager.js":"32","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\firebaseDB.js":"33","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\about.js":"34"},{"size":500,"mtime":1620723861331,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1620723861331,"results":"37","hashOfConfig":"36"},{"size":466,"mtime":1621113695108,"results":"38","hashOfConfig":"36"},{"size":728,"mtime":1620970165176,"results":"39","hashOfConfig":"36"},{"size":2428,"mtime":1621230241423,"results":"40","hashOfConfig":"36"},{"size":4577,"mtime":1621230552552,"results":"41","hashOfConfig":"36"},{"size":6241,"mtime":1621275871964,"results":"42","hashOfConfig":"36"},{"size":454,"mtime":1620950982865,"results":"43","hashOfConfig":"36"},{"size":1078,"mtime":1621222101166,"results":"44","hashOfConfig":"36"},{"size":456,"mtime":1621209279362,"results":"45","hashOfConfig":"36"},{"size":363,"mtime":1620996989619,"results":"46","hashOfConfig":"36"},{"size":176,"mtime":1621205694492,"results":"47","hashOfConfig":"36"},{"size":201,"mtime":1621175539624,"results":"48","hashOfConfig":"36"},{"size":139,"mtime":1620997501824,"results":"49","hashOfConfig":"36"},{"size":967,"mtime":1621227784407,"results":"50","hashOfConfig":"36"},{"size":1101,"mtime":1621106826167,"results":"51","hashOfConfig":"36"},{"size":500,"mtime":1620723861331,"results":"52","hashOfConfig":"53"},{"size":466,"mtime":1621113695108,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1620723861331,"results":"55","hashOfConfig":"53"},{"size":819,"mtime":1621549946972,"results":"56","hashOfConfig":"53"},{"size":3861,"mtime":1621950455986,"results":"57","hashOfConfig":"53"},{"size":201,"mtime":1621175539624,"results":"58","hashOfConfig":"53"},{"size":11760,"mtime":1621554354369,"results":"59","hashOfConfig":"53"},{"size":7348,"mtime":1621949733817,"results":"60","hashOfConfig":"53"},{"size":1835,"mtime":1621554441473,"results":"61","hashOfConfig":"53"},{"size":454,"mtime":1620950982865,"results":"62","hashOfConfig":"53"},{"size":456,"mtime":1621209279362,"results":"63","hashOfConfig":"53"},{"size":363,"mtime":1620996989619,"results":"64","hashOfConfig":"53"},{"size":1101,"mtime":1621106826167,"results":"65","hashOfConfig":"53"},{"size":139,"mtime":1620997501824,"results":"66","hashOfConfig":"53"},{"size":176,"mtime":1621205694492,"results":"67","hashOfConfig":"53"},{"size":967,"mtime":1621227784407,"results":"68","hashOfConfig":"53"},{"size":175,"mtime":1621518573456,"results":"69","hashOfConfig":"53"},{"size":4692,"mtime":1621552257369,"results":"70","hashOfConfig":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1f2wksl",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1ctyzof",{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"111"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"111"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"111"},"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\index.js",[],["149","150"],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\reportWebVitals.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\App.js",["151","152"],"import Login from \"./components/login\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport Main from \"./components/main.js\"\r\nimport './App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction App() {\r\n  console.log(store.getState())\r\n  return (\r\n      <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n      </Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\main.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\login.js",["153","154","155","156"],"import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserId } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport '../App.css';\r\nimport logo from '../logo.png';\r\n\r\nfunction Login({propOne, updateUserId}) {\r\n\r\n  // Write a function to save login credentials into the redux\r\n  const [userdata, setUserdata] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('index');\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            console.log(isSignedIn);\r\n            if(isSignedIn && userdata==null){\r\n              console.log(user);\r\n              setUserdata(user);\r\n              console.log(userdata)\r\n              updateUserId(user);\r\n            }\r\n            //\r\n\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              // goHome();\r\n              return <div><p>You are authenticated</p>\r\n              <input type=\"button\" className=\"btn btn-primary\" value=\"Continue\" onClick={goHome}></input>\r\n          </div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateUserId})(Login)\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\index.js",["157","158","159","160","161","162","163","164","165"],"// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nimport logo from '../logo.png';\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  useEffect(() => {\r\n    if (propOne === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      // console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        // console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <p className='red-text-shadow' style={{textDecoration:\"underline\"}}>Puranas</p>\r\n\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div>{ elements.map(notification => <div><input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\puranas.js",["166","167","168","169","170"],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\config.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\home.js",["171","172"],"\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport logo from '../logo.png';\r\nimport Main from \"./main.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const goLogin = () => {\r\n    history.push('login');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p style={{textDecoration:\"underline\"}}>English Puranas</p>\r\n      <p>Stories from ancient india.</p>\r\n      <p>Indian puranas are stories explaining the fundamentals and origins of Indian hindu religion.</p>\r\n      <p>Read and share stories about Indian gods, thier significance,</p>\r\n      <p> ways to worship them, and thier endeavours to enhance humanity.</p>\r\n      <p>Understand the meaning of the purans and apply to your lifes.</p>\r\n      <input type=\"button\" className=\"btn btn-primary filldiv\" value=\"Login\" onClick={goLogin}></input>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actions.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\selectors.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actionTypes.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\store.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\index.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\stateManager.js",["173","174"],"import { SET_PAGE, RESET_STATE, UPDATE_SESSION, UPDATE_USERID } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  currentPage: '1',\r\n  userId: '',\r\n  session: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case SET_PAGE: {\r\n      const { content } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentPage:content,\r\n        session: [...state.session, content]\r\n      };\r\n    }\r\n    case UPDATE_USERID: {\r\n      const { content } = action.payload;\r\n      return {\r\n        ...state,\r\n        userId: content\r\n      };\r\n    }\r\n    case UPDATE_SESSION: {\r\n      const { page } = action.payload;\r\n      return {\r\n        ...state,\r\n        session: [...state.session, page]\r\n      };\r\n    }\r\n    case RESET_STATE: {\r\n      const { page } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentPage: '1',\r\n        session: []\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\googleAds.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\index.js",[],["175","176"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\App.js",["177","178"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\reportWebVitals.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\main.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\login.js",["179","180","181","182"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\store.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\puranas.js",["183","184","185","186","187","188","189","190"],"\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage, updateSession } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getPage } from \"../redux/selectors\";\r\nimport GoogleAd from './googleAds';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport logo from '../logo.png';\r\nimport database from \"./firebaseDB\"\r\n\r\n\r\n\r\nimport {\r\n  FacebookShareCount\r\n} from \"react-share\";\r\n\r\nimport {\r\n  FacebookIcon,\r\n  LinkedinIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon\r\n} from \"react-share\";\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton\r\n} from \"react-share\";\r\n\r\nconst AsyncImage = (props) => {\r\n    const [loadedSrc, setLoadedSrc] = React.useState(null);\r\n    React.useEffect(() => {\r\n        setLoadedSrc(null);\r\n        if (props.src) {\r\n            const handleLoad = () => {\r\n                setLoadedSrc(props.src);\r\n            };\r\n            const image = new Image();\r\n            image.addEventListener('load', handleLoad);\r\n            image.src = props.src;\r\n            return () => {\r\n                image.removeEventListener('load', handleLoad);\r\n            };\r\n        }\r\n    }, [props.src]);\r\n    if (loadedSrc === props.src) {\r\n        return (\r\n            <img {...props} className=\"img-fluid\"/>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\nfunction Puranas({propOne, setPage}) {\r\n\r\n  const history = useHistory();\r\n\r\n    const [userdata, setUserData] = useState({});\r\n    const [karma, setKarma] = useState(0);\r\n\r\n  // console.log(userdata)\r\n\r\n  useEffect(() => {\r\n    if (propOne.userId === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n  if (propOne.userId != \"\"){\r\n    // console.log(\"Creating a new user in rtdb\")\r\n\r\n      const userRef = database.ref('users')\r\n\r\n      userRef.orderByChild(\"uid\").equalTo(propOne.userId.uid).once(\"value\",snapshot => {\r\n      if (snapshot.exists()){\r\n        const userData = snapshot.val();\r\n        // console.log(\"exists!\");\r\n        setUserData(userData);\r\n        for (let id in userData){\r\n          // console.log(userData[id]);\r\n\r\n          var new_karma = userData[id].karma + Math.ceil(propOne.session.length*(propOne.session.length+1)*0.5);\r\n          // console.log(new_karma)\r\n          setKarma(new_karma);\r\n        }\r\n\r\n      } else {\r\n\r\n        const data = {\r\n          displayName: propOne.userId.displayName,\r\n          email: propOne.userId.email,\r\n          photoURL: propOne.userId.photoURL,\r\n          uid: propOne.userId.uid,\r\n          phoneNumber: propOne.userId.phoneNumber,\r\n          karma:0,\r\n          session:[],\r\n          ts:Date.now()\r\n        }\r\n        userRef.push(data)\r\n      }\r\n  });\r\n\r\n  }\r\n}, [userdata, propOne])\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas_jsons/\"+propOne.currentPage+\".json\")\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [imgurl, setImgurl] = useState(\"https://simplepuranas.sgp1.digitaloceanspaces.com/\"+propOne.currentPage+\".png\")\r\n\r\n  const goIndex = () => {\r\n    history.push('index');\r\n    const userRef = database.ref('users');\r\n    userRef.orderByChild(\"uid\").equalTo(propOne.userId.uid).once(\"value\",snapshot => {\r\n    if (snapshot.exists()){\r\n      for (let id in userdata){\r\n         userRef.child(id).update({karma: karma, session: propOne.session, ts:Date.now()});\r\n       }\r\n     }\r\n   });\r\n  }\r\n\r\n  const goNext = () => {\r\n    const userRef = database.ref('users');\r\n    userRef.orderByChild(\"uid\").equalTo(propOne.userId.uid).once(\"value\",snapshot => {\r\n    if (snapshot.exists()){\r\n      for (let id in userdata){\r\n         userRef.child(id).update({karma: karma, session: propOne.session, ts:Date.now()});\r\n       }\r\n     }\r\n   });\r\n    if(items[\"next\"]){\r\n    setPage(items[\"next\"]);\r\n    var new_url = \"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas_jsons/\"+items[\"next\"]+\".json\"\r\n    var new_imgurl = \"https://simplepuranas.sgp1.digitaloceanspaces.com/\"+items[\"next\"]+\".png\"\r\n  } else {\r\n    history.push('index');\r\n  }\r\n    setUrl(new_url)\r\n    setImgurl(new_imgurl)\r\n\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  var new_url;\r\n  var new_imgurl;\r\n\r\n  // stop audio sound\r\n  const goPrev = () => {\r\n    const userRef = database.ref('users');\r\n    userRef.orderByChild(\"uid\").equalTo(propOne.userId.uid).once(\"value\",snapshot => {\r\n    if (snapshot.exists()){\r\n      for (let id in userdata){\r\n         userRef.child(id).update({karma: karma, session: propOne.session, ts:Date.now()});\r\n       }\r\n     }\r\n   });\r\n    if(items[\"prev\"]){\r\n      setPage(items[\"next\"]);\r\n    new_url = \"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas_jsons/\"+items[\"prev\"]+\".json\"\r\n    new_imgurl = \"https://simplepuranas.sgp1.digitaloceanspaces.com/\"+items[\"prev\"]+\".png\"\r\n  } else {\r\n    history.push('index');\r\n    }\r\n    setUrl(new_url)\r\n    setImgurl(new_imgurl)\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n\r\n  // console.log(items['text'])\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div><header className=\"AppHeader\">Loading...</header></div>;\r\n  } else {\r\n    return (\r\n      <div className='App' >\r\n      <Navbar bg=\"warning\" variant=\"light\">\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"70\"\r\n        height=\"70\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n      <Navbar.Brand href=\"/\" >\r\n\r\n        Simple Puranas\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n    <Navbar.Collapse className=\"justify-content-end\">\r\n    <Navbar.Brand type=\"button\" className=\"btn btn-link\" style={{color:\"white\"}}>\r\n    <a href=\"about\" style={{color:\"Brown\"}}>About</a>\r\n    </Navbar.Brand>\r\n    <Navbar.Text>\r\n&nbsp;&nbsp;\r\n    </Navbar.Text>\r\n    <Navbar.Text type=\"button\" className=\"btn btn-success\" style={{color:\"white\"}}>\r\n    Karma Points<br/><a href=\"login\" className=\"mb-0 h1\" style={{color:\"white\"}}>{karma}</a>\r\n    </Navbar.Text>\r\n    <Navbar.Text>\r\n&nbsp;&nbsp;\r\n    </Navbar.Text>\r\n    <Navbar.Text>\r\n&nbsp;&nbsp;\r\n    </Navbar.Text>\r\n    <Navbar.Text>\r\n    <img\r\n      alt=\"\"\r\n      src={propOne.userId.photoURL}\r\n      width=\"50\"\r\n      height=\"50\"\r\n      class=\"\"\r\n      className=\"d-inline-block align-top\"\r\n      style={{borderRadius: \"50%\"}}\r\n    />{' '}\r\n    <br />\r\n    <a href=\"login\">{propOne.userId.displayName}</a>\r\n    </Navbar.Text>\r\n\r\n    </Navbar.Collapse>\r\n    </Navbar>\r\n      <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n      <p className='red-text-shadow' style={{textDecoration:\"underline\"}}>{items.index}</p>\r\n      <p className='red-text-shadow' className=\"mb-0 h1\" style={{textDecoration:\"underline\", color:\"yellow\"}}>{items.title}</p>\r\n      <div className='row'>\r\n\r\n          <div>\r\n\r\n\r\n            <p/>\r\n            <AsyncImage src={imgurl} />\r\n            <p/>\r\n            <div>\r\n            <p>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            </p>\r\n            </div>\r\n            <div>{ items.text.map(notification => <p className='red-text-shadow' style={{padding: \"5px 50px 10px 50px\"}}>{ notification }</p>) }</div>\r\n\r\n          </div>\r\n\r\n      </div>\r\n      <div>\r\n      </div>\r\n      <div class=\"d-flex\" >\r\n        <div style={{flex:0.5}}>\r\n\r\n          <input type=\"button\" className=\"btn btn-primary\" value=\"Prev\" style={{float:\"left\"}} onClick={goPrev}></input>\r\n        </div>\r\n\r\n        <div style={{flex:2}}>\r\n        <p>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </p>\r\n\r\n        </div>\r\n\r\n        <div style={{flex:0.5}}>\r\n        <TwitterShareButton url=\"https://www.simplepuranas.com/\" title={items.title} via=\"https://www.simplepuranas.com/\" hashtag=\"#Dharmic #Hindu #Puranas\">\r\n          <TwitterIcon logoFillColor=\"white\" size={45} round={true}/>\r\n        </TwitterShareButton>\r\n        </div>\r\n\r\n        <div style={{flex:2}}>\r\n        <p>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </p>\r\n\r\n        </div>\r\n\r\n        <div style={{flex:0.5}}>\r\n        <WhatsappShareButton url=\"https://www.simplepuranas.com/\" quote={items.title}>\r\n          <WhatsappIcon logoFillColor=\"white\" size={45} round={true}/>\r\n        </WhatsappShareButton>\r\n        </div>\r\n\r\n        <div style={{flex:2}}>\r\n        <p>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </p>\r\n        </div>\r\n\r\n        <div style={{flex:0.5}}>\r\n        <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={goIndex}></input>\r\n        </div>\r\n\r\n        <div style={{flex:2}}>\r\n        <p>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </p>\r\n        </div>\r\n\r\n        <div style={{flex:0.5}}>\r\n        <FacebookShareButton url=\"https://www.simplepuranas.com/\" quote={items.title} hashtag=\"#Dharmic #Hindu #Puranas\">\r\n          <FacebookIcon logoFillColor=\"white\" size={45} round={true}/>\r\n        </FacebookShareButton>\r\n        </div>\r\n\r\n        <div style={{flex:2}}>\r\n        <p>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </p>\r\n\r\n        </div>\r\n\r\n        <div style={{flex:0.5}}>\r\n        <LinkedinShareButton url=\"https://www.simplepuranas.com/\" title=\"Simple Puranas - Hindu Ancient Stories\" summary={items.title} source=\"https://www.simplepuranas.com/\">\r\n          <LinkedinIcon logoFillColor=\"white\" size={45} round={true}/>\r\n        </LinkedinShareButton>\r\n        </div>\r\n\r\n        <div style={{flex:2}}>\r\n        <p>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </p>\r\n        </div>\r\n\r\n        <div style={{flex:0.5}}>\r\n\r\n        <input type=\"button\" className=\"btn btn-primary \" style={{float:\"right\"}} value=\"Next\" onClick={goNext}></input>\r\n\r\n        </div>\r\n      </div>\r\n      </header>\r\n      <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  // console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(Puranas);\r\n","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\index.js",["191","192","193","194","195","196","197","198","199","200","201","202"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\home.js",["203"],"\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport logo from '../logo.png';\r\nimport Main from \"./main.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const goLogin = () => {\r\n    history.push('login');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n    <Navbar bg=\"warning\" variant=\"light\">\r\n    <Navbar.Brand href=\"/\" >\r\n    <img\r\n      alt=\"\"\r\n      src={logo}\r\n      width=\"35\"\r\n      height=\"35\"\r\n      className=\"d-inline-block align-top\"\r\n    />{' '}\r\n      Simple Puranas\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle />\r\n  <Navbar.Collapse className=\"justify-content-end\">\r\n  <Navbar.Brand type=\"button\" className=\"btn btn-link\" style={{color:\"white\"}}>\r\n  <a href=\"about\" style={{color:\"Brown\"}}>About</a>\r\n  </Navbar.Brand>\r\n  <Navbar.Text>\r\n&nbsp;&nbsp;\r\n  </Navbar.Text>\r\n    <Navbar.Text>\r\n    <Button variant=\"outline-light\" href=\"/login\">Signin</Button>\r\n    </Navbar.Text>\r\n  </Navbar.Collapse>\r\n  </Navbar>\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p className=\"mb-0 h1\" style={{textDecoration:\"underline\", color:\"yellow\"}}>Simple Puranas</p>\r\n      <br/>\r\n      <p>Stories from ancient india.</p>\r\n      <p>Indian puranas are stories explaining the fundamentals and origins of Indian hindu religion.</p>\r\n      <p>Read and share stories about Indian gods, thier significance,</p>\r\n      <p>ways to worship them, and thier endeavours to enhance humanity.</p>\r\n      <p>Assimilate the teachings of the puranas to enhance your lives.</p>\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Login\" onClick={goLogin}></input>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\config.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actions.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\selectors.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\googleAds.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\index.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actionTypes.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\stateManager.js",["204","205"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\firebaseDB.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\about.js",["206"],"\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport logo from '../logo.png';\r\nimport Main from \"./main.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction About() {\r\n  const history = useHistory();\r\n\r\n  const goLogin = () => {\r\n    history.push('/');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n    <Navbar bg=\"warning\" variant=\"light\">\r\n    <Navbar.Brand href=\"/\" >\r\n    <img\r\n      alt=\"\"\r\n      src={logo}\r\n      width=\"35\"\r\n      height=\"35\"\r\n      className=\"d-inline-block align-top\"\r\n    />{' '}\r\n      Simple Puranas\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle />\r\n  <Navbar.Collapse className=\"justify-content-end\">\r\n  <Navbar.Brand type=\"button\" className=\"btn btn-link\" style={{color:\"white\"}}>\r\n  <a href=\"about\" style={{color:\"Brown\"}}>About</a>\r\n  </Navbar.Brand>\r\n  <Navbar.Text>\r\n&nbsp;&nbsp;\r\n  </Navbar.Text>\r\n    <Navbar.Text>\r\n    <Button variant=\"outline-light\" href=\"/login\">Signin</Button>\r\n    </Navbar.Text>\r\n  </Navbar.Collapse>\r\n  </Navbar>\r\n    <header className=\"App-header\" style={{padding: \"5px 50px 10px 50px\"}}>\r\n    <br/>\r\n      <p className=\"mb-0 h1\" style={{textDecoration:\"underline\", color:\"yellow\"}}>Simple Puranas</p>\r\n      <br/>\r\n      <p style={{textDecoration:\"underline\", color:\"yellow\"}}>Goal of the Simple Puranas</p>\r\n      <p>The ancient puranas contain stories written as verses in the times of sages</p>\r\n      <p>These stories were passed down from generations through scriptures and plays</p>\r\n      <p>We are slowly losing touch of these ancient stories which have much to teach us in current times as they were available in touch to translate sanskrit and hard to read books, scriptures or pdfs.</p>\r\n      <p>Simple puranas was designed as a tool to help interested readers of all age groups to easily access the content of these documents.</p>\r\n      <p>We aim to utilize modern development tools to provide this content in an manner which is easily assimilable and fun to peruse</p>\r\n      <br/>\r\n      <p style={{textDecoration:\"underline\", color:\"yellow\"}}>Source of simple puranas</p>\r\n      <p>The source of the content for simple puranas comes from a pdf which was one of the earliest attempts to digitise the stories in the puranas</p>\r\n      <p>The dharmic scriptures team translated and compiled the content of these stories in 2002</p>\r\n      <p>Puranas are so old that an author is not known, so are the vedas and the upanishads</p>\r\n      <p>Hindu scriptures have been passed down through generations without ownership of content</p>\r\n      <p>Simple puranas is an effort to carry forward this legacy so that future generations can benefit from these stories</p>\r\n      <br/>\r\n      <p style={{textDecoration:\"underline\", color:\"yellow\"}}>Karma point system</p>\r\n      <p>The Karma system is hindu tradition which say good and bad deeds are tracked by the creator of the universe and rewarded as such</p>\r\n      <p>We created a simple point system to keep the readers motivate, the score of reading a page is the sum of the points scored for all the pages read before it in the current session</p>\r\n      <p>The puranas are dense, and we encourage the user to read as many puranas, chapters and sections, as they can in a single session</p>\r\n      <p>Quizzes will be made available and online competitions will be held to boost the karma points of the dharmic readers</p>\r\n      <p>It is very easy to score good karma and very hard to incur bad karma as long as the teachings of the puranas are kep close to heart</p>\r\n      <br/>\r\n      <p style={{textDecoration:\"underline\", color:\"yellow\"}}>How to use</p>\r\n      <p>Login with your Gmail id and we will create your profile</p>\r\n      <p>Check the index for the purana you want to read</p>\r\n      <p>Start from the top and read to the bottom of each page</p>\r\n      <p>Meditate on the beauty of any image you find extremely pleasing, this will help you build a love for god and calm your heart, mind and soul.</p>\r\n      <p>Reflect on the meaning of the section and try to understand any shloka or complicated word</p>\r\n      <p>Click next to go the next section, keep conscious track of which section you are at, so that you may revisit it later</p>\r\n      <p>Share any section you particularly like on social media through the various buttons made available</p>\r\n      <br/>\r\n      <p style={{textDecoration:\"underline\", color:\"yellow\"}}>Jai Shree Krishna, Jai Shree Ram, Om Namah Shivay!</p>\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Home\" onClick={goLogin}></input>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default About;\r\n",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"216","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":22},{"ruleId":"211","severity":1,"message":"218","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":12},{"ruleId":"211","severity":1,"message":"215","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":14},{"ruleId":"211","severity":1,"message":"215","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":22,"column":6,"nodeType":"221","endLine":22,"endColumn":8,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"223","line":28,"column":15,"nodeType":"213","messageId":"214","endLine":28,"endColumn":21},{"ruleId":"211","severity":1,"message":"224","line":29,"column":16,"nodeType":"213","messageId":"214","endLine":29,"endColumn":23},{"ruleId":"211","severity":1,"message":"225","line":35,"column":10,"nodeType":"213","messageId":"214","endLine":35,"endColumn":16},{"ruleId":"211","severity":1,"message":"226","line":35,"column":18,"nodeType":"213","messageId":"214","endLine":35,"endColumn":27},{"ruleId":"211","severity":1,"message":"227","line":36,"column":10,"nodeType":"213","messageId":"214","endLine":36,"endColumn":15},{"ruleId":"211","severity":1,"message":"228","line":36,"column":17,"nodeType":"213","messageId":"214","endLine":36,"endColumn":25},{"ruleId":"219","severity":1,"message":"229","line":74,"column":6,"nodeType":"221","endLine":74,"endColumn":12,"suggestions":"230"},{"ruleId":"211","severity":1,"message":"215","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":14},{"ruleId":"211","severity":1,"message":"231","line":6,"column":19,"nodeType":"213","messageId":"214","endLine":6,"endColumn":32},{"ruleId":"211","severity":1,"message":"232","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":29,"column":13,"nodeType":"235","endLine":29,"endColumn":31},{"ruleId":"219","severity":1,"message":"236","line":43,"column":6,"nodeType":"221","endLine":43,"endColumn":8,"suggestions":"237"},{"ruleId":"211","severity":1,"message":"215","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"238","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":12},{"ruleId":"239","severity":1,"message":"240","line":9,"column":1,"nodeType":"241","endLine":45,"endColumn":2},{"ruleId":"211","severity":1,"message":"242","line":35,"column":15,"nodeType":"213","messageId":"214","endLine":35,"endColumn":19},{"ruleId":"207","replacedBy":"243"},{"ruleId":"209","replacedBy":"244"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"216","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":22},{"ruleId":"211","severity":1,"message":"215","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":14},{"ruleId":"211","severity":1,"message":"218","line":14,"column":8,"nodeType":"213","messageId":"214","endLine":14,"endColumn":12},{"ruleId":"211","severity":1,"message":"215","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":14},{"ruleId":"211","severity":1,"message":"231","line":6,"column":19,"nodeType":"213","messageId":"214","endLine":6,"endColumn":32},{"ruleId":"211","severity":1,"message":"232","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":17},{"ruleId":"211","severity":1,"message":"245","line":17,"column":3,"nodeType":"213","messageId":"214","endLine":17,"endColumn":21},{"ruleId":"233","severity":1,"message":"234","line":52,"column":13,"nodeType":"235","endLine":52,"endColumn":52},{"ruleId":"219","severity":1,"message":"236","line":71,"column":6,"nodeType":"221","endLine":71,"endColumn":8,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":74,"column":22,"nodeType":"249","messageId":"250","endLine":74,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":287,"column":38,"nodeType":"253","endLine":287,"endColumn":57},{"ruleId":"211","severity":1,"message":"215","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":28,"column":6,"nodeType":"221","endLine":28,"endColumn":8,"suggestions":"254"},{"ruleId":"211","severity":1,"message":"223","line":34,"column":15,"nodeType":"213","messageId":"214","endLine":34,"endColumn":21},{"ruleId":"211","severity":1,"message":"224","line":35,"column":16,"nodeType":"213","messageId":"214","endLine":35,"endColumn":23},{"ruleId":"211","severity":1,"message":"225","line":41,"column":10,"nodeType":"213","messageId":"214","endLine":41,"endColumn":16},{"ruleId":"211","severity":1,"message":"226","line":41,"column":18,"nodeType":"213","messageId":"214","endLine":41,"endColumn":27},{"ruleId":"211","severity":1,"message":"227","line":42,"column":10,"nodeType":"213","messageId":"214","endLine":42,"endColumn":15},{"ruleId":"211","severity":1,"message":"228","line":42,"column":17,"nodeType":"213","messageId":"214","endLine":42,"endColumn":25},{"ruleId":"247","severity":1,"message":"248","line":45,"column":15,"nodeType":"249","messageId":"250","endLine":45,"endColumn":17},{"ruleId":"219","severity":1,"message":"229","line":121,"column":6,"nodeType":"221","endLine":121,"endColumn":12,"suggestions":"255"},{"ruleId":"247","severity":1,"message":"256","line":154,"column":21,"nodeType":"249","messageId":"250","endLine":154,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":157,"column":9,"nodeType":"213","messageId":"259","endLine":157,"endColumn":18},{"ruleId":"211","severity":1,"message":"238","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":12},{"ruleId":"239","severity":1,"message":"240","line":9,"column":1,"nodeType":"241","endLine":45,"endColumn":2},{"ruleId":"211","severity":1,"message":"242","line":35,"column":15,"nodeType":"213","messageId":"214","endLine":35,"endColumn":19},{"ruleId":"211","severity":1,"message":"238","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":12},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'render' is defined but never used.","'IfFirebaseAuthedAnd' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'propOne'. Either include them or remove the dependency array.","ArrayExpression",["262"],"'setUrl' is assigned a value but never used.","'setPurl' is assigned a value but never used.","'purana' is assigned a value but never used.","'setPurana' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'puranas.puranas'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setElements' needs the current value of 'puranas.puranas'.",["263"],"'updateSession' is defined but never used.","'getPage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history' and 'propOne.userId'. Either include them or remove the dependency array.",["264"],"'Main' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'page' is assigned a value but never used.",["260"],["261"],"'FacebookShareCount' is defined but never used.",["265"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["266"],["267"],"Expected '===' and instead saw '=='.","no-redeclare","'container' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"272","fix":"274"},{"desc":"268","fix":"275"},{"desc":"270","fix":"276"},"Update the dependencies array to be: [history, propOne]",{"range":"277","text":"278"},"Update the dependencies array to be: [puranas.puranas, purl]",{"range":"279","text":"280"},"Update the dependencies array to be: [history, propOne.userId]",{"range":"281","text":"282"},{"range":"283","text":"282"},{"range":"284","text":"278"},{"range":"285","text":"280"},[787,789],"[history, propOne]",[2477,2483],"[puranas.puranas, purl]",[1209,1211],"[history, propOne.userId]",[1764,1766],[1005,1007],[3810,3816]]