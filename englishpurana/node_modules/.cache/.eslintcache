[{"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\index.js":"1","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\reportWebVitals.js":"2","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\App.js":"3","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\main.js":"4","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\login.js":"5","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\index.js":"6","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\puranas.js":"7","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\config.js":"8","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\home.js":"9","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actions.js":"10","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\selectors.js":"11","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actionTypes.js":"12","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\store.js":"13","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\index.js":"14","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\stateManager.js":"15","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\googleAds.js":"16"},{"size":500,"mtime":1620723861331,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1620723861331,"results":"19","hashOfConfig":"18"},{"size":466,"mtime":1621113695108,"results":"20","hashOfConfig":"18"},{"size":728,"mtime":1620970165176,"results":"21","hashOfConfig":"18"},{"size":2428,"mtime":1621230241423,"results":"22","hashOfConfig":"18"},{"size":4577,"mtime":1621230552552,"results":"23","hashOfConfig":"18"},{"size":6241,"mtime":1621275871964,"results":"24","hashOfConfig":"18"},{"size":454,"mtime":1620950982865,"results":"25","hashOfConfig":"18"},{"size":1078,"mtime":1621222101166,"results":"26","hashOfConfig":"18"},{"size":456,"mtime":1621209279362,"results":"27","hashOfConfig":"18"},{"size":363,"mtime":1620996989619,"results":"28","hashOfConfig":"18"},{"size":176,"mtime":1621205694492,"results":"29","hashOfConfig":"18"},{"size":201,"mtime":1621175539624,"results":"30","hashOfConfig":"18"},{"size":139,"mtime":1620997501824,"results":"31","hashOfConfig":"18"},{"size":967,"mtime":1621227784407,"results":"32","hashOfConfig":"18"},{"size":1101,"mtime":1621106826167,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1f2wksl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\index.js",[],["72","73"],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\reportWebVitals.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\App.js",["74","75"],"import Login from \"./components/login\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport Main from \"./components/main.js\"\r\nimport './App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction App() {\r\n  console.log(store.getState())\r\n  return (\r\n      <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n      </Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\main.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\login.js",["76","77","78","79"],"import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserId } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport '../App.css';\r\nimport logo from '../logo.png';\r\n\r\nfunction Login({propOne, updateUserId}) {\r\n\r\n  // Write a function to save login credentials into the redux\r\n  const [userdata, setUserdata] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('index');\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            console.log(isSignedIn);\r\n            if(isSignedIn && userdata==null){\r\n              console.log(user);\r\n              setUserdata(user);\r\n              console.log(userdata)\r\n              updateUserId(user);\r\n            }\r\n            //\r\n\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              // goHome();\r\n              return <div><p>You are authenticated</p>\r\n              <input type=\"button\" className=\"btn btn-primary\" value=\"Continue\" onClick={goHome}></input>\r\n          </div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateUserId})(Login)\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\index.js",["80","81","82","83","84","85","86","87","88"],"// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nimport logo from '../logo.png';\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  useEffect(() => {\r\n    if (propOne === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      // console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        // console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <p className='red-text-shadow' style={{textDecoration:\"underline\"}}>Puranas</p>\r\n\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div>{ elements.map(notification => <div><input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\puranas.js",["89","90","91","92","93"],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\config.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\home.js",["94","95"],"\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport logo from '../logo.png';\r\nimport Main from \"./main.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const goLogin = () => {\r\n    history.push('login');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p style={{textDecoration:\"underline\"}}>English Puranas</p>\r\n      <p>Stories from ancient india.</p>\r\n      <p>Indian puranas are stories explaining the fundamentals and origins of Indian hindu religion.</p>\r\n      <p>Read and share stories about Indian gods, thier significance,</p>\r\n      <p> ways to worship them, and thier endeavours to enhance humanity.</p>\r\n      <p>Understand the meaning of the purans and apply to your lifes.</p>\r\n      <input type=\"button\" className=\"btn btn-primary filldiv\" value=\"Login\" onClick={goLogin}></input>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actions.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\selectors.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actionTypes.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\store.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\index.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\stateManager.js",["96","97"],"import { SET_PAGE, RESET_STATE, UPDATE_SESSION, UPDATE_USERID } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  currentPage: '1',\r\n  userId: '',\r\n  session: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case SET_PAGE: {\r\n      const { content } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentPage:content,\r\n        session: [...state.session, content]\r\n      };\r\n    }\r\n    case UPDATE_USERID: {\r\n      const { content } = action.payload;\r\n      return {\r\n        ...state,\r\n        userId: content\r\n      };\r\n    }\r\n    case UPDATE_SESSION: {\r\n      const { page } = action.payload;\r\n      return {\r\n        ...state,\r\n        session: [...state.session, page]\r\n      };\r\n    }\r\n    case RESET_STATE: {\r\n      const { page } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentPage: '1',\r\n        session: []\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\googleAds.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"106","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"107","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"108","line":9,"column":3,"nodeType":"104","messageId":"105","endLine":9,"endColumn":22},{"ruleId":"102","severity":1,"message":"109","line":12,"column":8,"nodeType":"104","messageId":"105","endLine":12,"endColumn":12},{"ruleId":"102","severity":1,"message":"106","line":13,"column":8,"nodeType":"104","messageId":"105","endLine":13,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":22,"column":6,"nodeType":"112","endLine":22,"endColumn":8,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"114","line":28,"column":15,"nodeType":"104","messageId":"105","endLine":28,"endColumn":21},{"ruleId":"102","severity":1,"message":"115","line":29,"column":16,"nodeType":"104","messageId":"105","endLine":29,"endColumn":23},{"ruleId":"102","severity":1,"message":"116","line":35,"column":10,"nodeType":"104","messageId":"105","endLine":35,"endColumn":16},{"ruleId":"102","severity":1,"message":"117","line":35,"column":18,"nodeType":"104","messageId":"105","endLine":35,"endColumn":27},{"ruleId":"102","severity":1,"message":"118","line":36,"column":10,"nodeType":"104","messageId":"105","endLine":36,"endColumn":15},{"ruleId":"102","severity":1,"message":"119","line":36,"column":17,"nodeType":"104","messageId":"105","endLine":36,"endColumn":25},{"ruleId":"110","severity":1,"message":"120","line":74,"column":6,"nodeType":"112","endLine":74,"endColumn":12,"suggestions":"121"},{"ruleId":"102","severity":1,"message":"106","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"122","line":6,"column":19,"nodeType":"104","messageId":"105","endLine":6,"endColumn":32},{"ruleId":"102","severity":1,"message":"123","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":29,"column":13,"nodeType":"126","endLine":29,"endColumn":31},{"ruleId":"110","severity":1,"message":"127","line":43,"column":6,"nodeType":"112","endLine":43,"endColumn":8,"suggestions":"128"},{"ruleId":"102","severity":1,"message":"106","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"129","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":12},{"ruleId":"130","severity":1,"message":"131","line":9,"column":1,"nodeType":"132","endLine":45,"endColumn":2},{"ruleId":"102","severity":1,"message":"133","line":35,"column":15,"nodeType":"104","messageId":"105","endLine":35,"endColumn":19},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'render' is defined but never used.","'IfFirebaseAuthedAnd' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'propOne'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'setUrl' is assigned a value but never used.","'setPurl' is assigned a value but never used.","'purana' is assigned a value but never used.","'setPurana' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'puranas.puranas'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setElements' needs the current value of 'puranas.puranas'.",["137"],"'updateSession' is defined but never used.","'getPage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history' and 'propOne.userId'. Either include them or remove the dependency array.",["138"],"'Main' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'page' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [history, propOne]",{"range":"145","text":"146"},"Update the dependencies array to be: [puranas.puranas, purl]",{"range":"147","text":"148"},"Update the dependencies array to be: [history, propOne.userId]",{"range":"149","text":"150"},[787,789],"[history, propOne]",[2477,2483],"[puranas.puranas, purl]",[1209,1211],"[history, propOne.userId]"]