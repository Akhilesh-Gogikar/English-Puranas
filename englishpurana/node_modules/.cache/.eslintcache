[{"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\index.js":"1","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\reportWebVitals.js":"2","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\App.js":"3","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\main.js":"4","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\login.js":"5","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\index.js":"6","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\puranas.js":"7","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\config.js":"8","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\home.js":"9","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actions.js":"10","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\selectors.js":"11","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actionTypes.js":"12","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\store.js":"13","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\index.js":"14","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\stateManager.js":"15","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\googleAds.js":"16","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\index.js":"17","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\App.js":"18","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\reportWebVitals.js":"19","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\main.js":"20","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\login.js":"21","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\store.js":"22","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\puranas.js":"23","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\index.js":"24","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\home.js":"25","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\config.js":"26","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actions.js":"27","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\selectors.js":"28","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\googleAds.js":"29","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\index.js":"30","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actionTypes.js":"31","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\stateManager.js":"32"},{"size":500,"mtime":1620723861331,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1620723861331,"results":"35","hashOfConfig":"34"},{"size":466,"mtime":1621113695108,"results":"36","hashOfConfig":"34"},{"size":728,"mtime":1620970165176,"results":"37","hashOfConfig":"34"},{"size":2428,"mtime":1621230241423,"results":"38","hashOfConfig":"34"},{"size":4577,"mtime":1621230552552,"results":"39","hashOfConfig":"34"},{"size":6241,"mtime":1621275871964,"results":"40","hashOfConfig":"34"},{"size":454,"mtime":1620950982865,"results":"41","hashOfConfig":"34"},{"size":1078,"mtime":1621222101166,"results":"42","hashOfConfig":"34"},{"size":456,"mtime":1621209279362,"results":"43","hashOfConfig":"34"},{"size":363,"mtime":1620996989619,"results":"44","hashOfConfig":"34"},{"size":176,"mtime":1621205694492,"results":"45","hashOfConfig":"34"},{"size":201,"mtime":1621175539624,"results":"46","hashOfConfig":"34"},{"size":139,"mtime":1620997501824,"results":"47","hashOfConfig":"34"},{"size":967,"mtime":1621227784407,"results":"48","hashOfConfig":"34"},{"size":1101,"mtime":1621106826167,"results":"49","hashOfConfig":"34"},{"size":500,"mtime":1620723861331,"results":"50","hashOfConfig":"51"},{"size":466,"mtime":1621113695108,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1620723861331,"results":"53","hashOfConfig":"51"},{"size":728,"mtime":1620970165176,"results":"54","hashOfConfig":"51"},{"size":3023,"mtime":1621360698105,"results":"55","hashOfConfig":"51"},{"size":201,"mtime":1621175539624,"results":"56","hashOfConfig":"51"},{"size":8786,"mtime":1621511576238,"results":"57","hashOfConfig":"51"},{"size":5364,"mtime":1621367024666,"results":"58","hashOfConfig":"51"},{"size":1606,"mtime":1621360111300,"results":"59","hashOfConfig":"51"},{"size":454,"mtime":1620950982865,"results":"60","hashOfConfig":"51"},{"size":456,"mtime":1621209279362,"results":"61","hashOfConfig":"51"},{"size":363,"mtime":1620996989619,"results":"62","hashOfConfig":"51"},{"size":1101,"mtime":1621106826167,"results":"63","hashOfConfig":"51"},{"size":139,"mtime":1620997501824,"results":"64","hashOfConfig":"51"},{"size":176,"mtime":1621205694492,"results":"65","hashOfConfig":"51"},{"size":967,"mtime":1621227784407,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1f2wksl",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1ctyzof",{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"107"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"107"},"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\index.js",[],["141","142"],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\reportWebVitals.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\App.js",["143","144"],"import Login from \"./components/login\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport Main from \"./components/main.js\"\r\nimport './App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction App() {\r\n  console.log(store.getState())\r\n  return (\r\n      <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n      </Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\main.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\login.js",["145","146","147","148"],"import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserId } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport '../App.css';\r\nimport logo from '../logo.png';\r\n\r\nfunction Login({propOne, updateUserId}) {\r\n\r\n  // Write a function to save login credentials into the redux\r\n  const [userdata, setUserdata] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('index');\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            console.log(isSignedIn);\r\n            if(isSignedIn && userdata==null){\r\n              console.log(user);\r\n              setUserdata(user);\r\n              console.log(userdata)\r\n              updateUserId(user);\r\n            }\r\n            //\r\n\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              // goHome();\r\n              return <div><p>You are authenticated</p>\r\n              <input type=\"button\" className=\"btn btn-primary\" value=\"Continue\" onClick={goHome}></input>\r\n          </div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateUserId})(Login)\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\index.js",["149","150","151","152","153","154","155","156","157"],"// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nimport logo from '../logo.png';\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  useEffect(() => {\r\n    if (propOne === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      // console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        // console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <p className='red-text-shadow' style={{textDecoration:\"underline\"}}>Puranas</p>\r\n\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div>{ elements.map(notification => <div><input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\puranas.js",["158","159","160","161","162"],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\config.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\home.js",["163","164"],"\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport logo from '../logo.png';\r\nimport Main from \"./main.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const goLogin = () => {\r\n    history.push('login');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p style={{textDecoration:\"underline\"}}>English Puranas</p>\r\n      <p>Stories from ancient india.</p>\r\n      <p>Indian puranas are stories explaining the fundamentals and origins of Indian hindu religion.</p>\r\n      <p>Read and share stories about Indian gods, thier significance,</p>\r\n      <p> ways to worship them, and thier endeavours to enhance humanity.</p>\r\n      <p>Understand the meaning of the purans and apply to your lifes.</p>\r\n      <input type=\"button\" className=\"btn btn-primary filldiv\" value=\"Login\" onClick={goLogin}></input>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actions.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\selectors.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\actionTypes.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\store.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\index.js",[],"C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\redux\\reducers\\stateManager.js",["165","166"],"import { SET_PAGE, RESET_STATE, UPDATE_SESSION, UPDATE_USERID } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  currentPage: '1',\r\n  userId: '',\r\n  session: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case SET_PAGE: {\r\n      const { content } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentPage:content,\r\n        session: [...state.session, content]\r\n      };\r\n    }\r\n    case UPDATE_USERID: {\r\n      const { content } = action.payload;\r\n      return {\r\n        ...state,\r\n        userId: content\r\n      };\r\n    }\r\n    case UPDATE_SESSION: {\r\n      const { page } = action.payload;\r\n      return {\r\n        ...state,\r\n        session: [...state.session, page]\r\n      };\r\n    }\r\n    case RESET_STATE: {\r\n      const { page } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentPage: '1',\r\n        session: []\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gogik\\PycharmProjects\\Puranas\\english-purana\\src\\components\\googleAds.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\index.js",[],["167","168"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\App.js",["169","170"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\reportWebVitals.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\main.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\login.js",["171","172","173","174"],"import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { config } from \"../config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserId } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport '../App.css';\r\nimport logo from '../logo.png';\r\n\r\nfunction Login({propOne, updateUserId}) {\r\n\r\n  // Write a function to save login credentials into the redux\r\n  const [userdata, setUserdata] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('index');\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <Navbar bg=\"warning\" variant=\"light\">\r\n    <Navbar.Brand href=\"/\" >\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n      Simple Puranas\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle />\r\n  <Navbar.Collapse className=\"justify-content-end\">\r\n    <Navbar.Text>\r\n    Signed in as: <a href=\"#login\">{propOne.userId.displayName}</a>\r\n    </Navbar.Text>\r\n  </Navbar.Collapse>\r\n  </Navbar>\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    <p style={{textDecoration:\"underline\"}}>Simple Puranas</p>\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <div>\r\n      <div>\r\n      <p>\r\n\r\n      </p>\r\n      </div>\r\n        <button className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n            firebase.auth().signInWithPopup(googleAuthProvider);\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            console.log(isSignedIn);\r\n            if(isSignedIn && userdata==null){\r\n              console.log(user);\r\n              setUserdata(user);\r\n              console.log(userdata)\r\n              updateUserId(user);\r\n            }\r\n            //\r\n\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n        <div>\r\n          <IfFirebaseAuthed>\r\n            {() => {\r\n              // goHome();\r\n              return <div><p>You are authenticated</p>\r\n              <input type=\"button\" className=\"btn btn-primary\" value=\"Continue\" onClick={goHome}></input>\r\n          </div>;\r\n            }}\r\n          </IfFirebaseAuthed>\r\n        </div>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager };\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateUserId})(Login)\r\n","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\store.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\puranas.js",["175","176","177","178","179","180"],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\index.js",["181","182","183","184","185","186","187","188","189","190","191"],"// Create an index page which has a list of puranas\r\n// when clicked on a purana we are led to a page which shows all the list chapters and sections\r\n// and a button to start reading from the first page\r\n// our choice should be saved in the app state in redux\r\n// The app state will be used to show the appropriate contents\r\nimport '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleAd from './googleAds';\r\n\r\nimport logo from '../logo.png';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction PuranaIndex({propOne, setPage}){\r\n\r\n  useEffect(() => {\r\n    if (propOne === \"\"){\r\n      history.push('login');\r\n    }\r\n  }, [])\r\n\r\n  console.log(propOne)\r\n\r\n  const history = useHistory();\r\n\r\n  const [url, setUrl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranasIndex.json\")\r\n  const [purl, setPurl] = useState(\"https://raw.githubusercontent.com/Akhilesh-Gogikar/English-Puranas/master/puranas.json\")\r\n  const [puranas, setPuranas] = useState({'puranas':[]});\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState({'text':[]});\r\n  const [elements, setElements] = useState([]);\r\n  const [purana, setPurana] = useState([]);\r\n  const [title, setTitle] = useState('Puranas');\r\n\r\n  const goNext = (props) => {\r\n        let path = `puranas`;\r\n    if (props && items.hasOwnProperty(props.title)){\r\n      setElements(items[props.title]);\r\n\r\n    } else {\r\n      // console.log(\"Check for chapters passed\")\r\n      if(props){\r\n        // console.log(propOne)\r\n        setPage(props.index)\r\n        history.push(path);\r\n      } else {\r\n        setPage('1');\r\n    history.push(path);\r\n      }\r\n      // Set the state in redux to the chapter in puran and redirect to /puranas\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(purl)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result)\r\n          setPuranas(result);\r\n          setElements(puranas.puranas);\r\n          // console.log(elements)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [purl])\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then( res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [url])\r\n  // console.log('Puranas')\r\n  // console.log(puranas.puranas)\r\n\r\n  const goBack = () => {\r\n      setElements(puranas.puranas);\r\n  }\r\n\r\n  //\r\n  // console.log('Index')\r\n  // console.log(items)\r\n\r\n  if(elements.length==18){\r\n    var container=\"container\"\r\n  } else {\r\n    var container = \"\"\r\n  }\r\n\r\n  if (error) {\r\n    return <div className='App' >\r\n    <header className=\"AppHeader\">Error: {error.message}\r\n    </header>\r\n    </div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n\r\n      <div className='App' >\r\n      <Navbar bg=\"warning\" variant=\"light\">\r\n      <Navbar.Brand href=\"/\" >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n        Simple Puranas\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n    <Navbar.Collapse className=\"justify-content-end\">\r\n      <Navbar.Text>\r\n      Signed in as: <br/><a href=\"#login\">{propOne.displayName}</a>\r\n      </Navbar.Text>\r\n    </Navbar.Collapse>\r\n    </Navbar>\r\n            <GoogleAd slot=\"4653616521\" timeout={1000} classNames=\"page-top\" />\r\n      <header className=\"App-header\">\r\n\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      <input type=\"button\" className=\"btn btn-warning\" value=\"Start Reading\" onClick={() => goNext()}></input>\r\n\r\n      <p/>\r\n\r\n      <input type=\"button\" className=\"btn btn-danger\" value=\"Index\" onClick={() => goBack()}></input>\r\n\r\n      <br/>\r\n\r\n      <div className={container}>{ elements.map(notification => <div><p>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </p><input type=\"button\" className=\"btn btn-dark\" value={ notification.index } onClick={() => goNext(notification)}></input>\r\n      <input type=\"button\" className=\"btn btn-primary\" value={ notification.title } onClick={() => goNext(notification)}></input><br/></div>) }</div>\r\n\r\n      <br/>\r\n\r\n\r\n\r\n      </header>\r\n            <GoogleAd slot=\"9722659117\" timeout={1000} classNames=\"page-bottom\" />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state.stateManager)\r\n  return { propOne: state.stateManager.userId};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setPage})(PuranaIndex);\r\n","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\home.js",["192"],"\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Text from 'react-text';\r\nimport logo from '../logo.png';\r\nimport Main from \"./main.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const goLogin = () => {\r\n    history.push('login');\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n    <Navbar bg=\"warning\" variant=\"light\">\r\n    <Navbar.Brand href=\"/\" >\r\n      <img\r\n        alt=\"\"\r\n        src={logo}\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n      Simple Puranas\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle />\r\n  <Navbar.Collapse className=\"justify-content-end\">\r\n    <Navbar.Text>\r\n    <Button variant=\"outline-light\" href=\"/login\">Signin</Button>\r\n    </Navbar.Text>\r\n  </Navbar.Collapse>\r\n  </Navbar>\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p style={{textDecoration:\"underline\"}}>Simple Puranas</p>\r\n      <p>Stories from ancient india.</p>\r\n      <p>Indian puranas are stories explaining the fundamentals and origins of Indian hindu religion.</p>\r\n      <p>Read and share stories about Indian gods, thier significance,</p>\r\n      <p>ways to worship them, and thier endeavours to enhance humanity.</p>\r\n      <p>Understand the meaning of the puranas and apply to enhance your lives.</p>\r\n      <input type=\"button\" className=\"btn btn-primary\" value=\"Login\" onClick={goLogin}></input>\r\n    </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n","C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\config.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actions.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\selectors.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\components\\googleAds.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\index.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\actionTypes.js",[],"C:\\Users\\gogik\\PycharmProjects\\English-Puranas\\englishpurana\\src\\redux\\reducers\\stateManager.js",["193","194"],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"199","severity":1,"message":"204","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"205","line":9,"column":3,"nodeType":"201","messageId":"202","endLine":9,"endColumn":22},{"ruleId":"199","severity":1,"message":"206","line":12,"column":8,"nodeType":"201","messageId":"202","endLine":12,"endColumn":12},{"ruleId":"199","severity":1,"message":"203","line":13,"column":8,"nodeType":"201","messageId":"202","endLine":13,"endColumn":14},{"ruleId":"199","severity":1,"message":"203","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":22,"column":6,"nodeType":"209","endLine":22,"endColumn":8,"suggestions":"210"},{"ruleId":"199","severity":1,"message":"211","line":28,"column":15,"nodeType":"201","messageId":"202","endLine":28,"endColumn":21},{"ruleId":"199","severity":1,"message":"212","line":29,"column":16,"nodeType":"201","messageId":"202","endLine":29,"endColumn":23},{"ruleId":"199","severity":1,"message":"213","line":35,"column":10,"nodeType":"201","messageId":"202","endLine":35,"endColumn":16},{"ruleId":"199","severity":1,"message":"214","line":35,"column":18,"nodeType":"201","messageId":"202","endLine":35,"endColumn":27},{"ruleId":"199","severity":1,"message":"215","line":36,"column":10,"nodeType":"201","messageId":"202","endLine":36,"endColumn":15},{"ruleId":"199","severity":1,"message":"216","line":36,"column":17,"nodeType":"201","messageId":"202","endLine":36,"endColumn":25},{"ruleId":"207","severity":1,"message":"217","line":74,"column":6,"nodeType":"209","endLine":74,"endColumn":12,"suggestions":"218"},{"ruleId":"199","severity":1,"message":"203","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"219","line":6,"column":19,"nodeType":"201","messageId":"202","endLine":6,"endColumn":32},{"ruleId":"199","severity":1,"message":"220","line":8,"column":10,"nodeType":"201","messageId":"202","endLine":8,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":29,"column":13,"nodeType":"223","endLine":29,"endColumn":31},{"ruleId":"207","severity":1,"message":"224","line":43,"column":6,"nodeType":"209","endLine":43,"endColumn":8,"suggestions":"225"},{"ruleId":"199","severity":1,"message":"203","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"199","severity":1,"message":"226","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":9,"column":1,"nodeType":"229","endLine":45,"endColumn":2},{"ruleId":"199","severity":1,"message":"230","line":35,"column":15,"nodeType":"201","messageId":"202","endLine":35,"endColumn":19},{"ruleId":"195","replacedBy":"231"},{"ruleId":"197","replacedBy":"232"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"199","severity":1,"message":"204","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"205","line":9,"column":3,"nodeType":"201","messageId":"202","endLine":9,"endColumn":22},{"ruleId":"199","severity":1,"message":"203","line":12,"column":8,"nodeType":"201","messageId":"202","endLine":12,"endColumn":14},{"ruleId":"199","severity":1,"message":"206","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":12},{"ruleId":"199","severity":1,"message":"203","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"219","line":6,"column":19,"nodeType":"201","messageId":"202","endLine":6,"endColumn":32},{"ruleId":"199","severity":1,"message":"220","line":8,"column":10,"nodeType":"201","messageId":"202","endLine":8,"endColumn":17},{"ruleId":"199","severity":1,"message":"233","line":14,"column":3,"nodeType":"201","messageId":"202","endLine":14,"endColumn":21},{"ruleId":"221","severity":1,"message":"222","line":49,"column":13,"nodeType":"223","endLine":49,"endColumn":53},{"ruleId":"207","severity":1,"message":"224","line":63,"column":6,"nodeType":"209","endLine":63,"endColumn":8,"suggestions":"234"},{"ruleId":"199","severity":1,"message":"203","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":23,"column":6,"nodeType":"209","endLine":23,"endColumn":8,"suggestions":"235"},{"ruleId":"199","severity":1,"message":"211","line":29,"column":15,"nodeType":"201","messageId":"202","endLine":29,"endColumn":21},{"ruleId":"199","severity":1,"message":"212","line":30,"column":16,"nodeType":"201","messageId":"202","endLine":30,"endColumn":23},{"ruleId":"199","severity":1,"message":"213","line":36,"column":10,"nodeType":"201","messageId":"202","endLine":36,"endColumn":16},{"ruleId":"199","severity":1,"message":"214","line":36,"column":18,"nodeType":"201","messageId":"202","endLine":36,"endColumn":27},{"ruleId":"199","severity":1,"message":"215","line":37,"column":10,"nodeType":"201","messageId":"202","endLine":37,"endColumn":15},{"ruleId":"199","severity":1,"message":"216","line":37,"column":17,"nodeType":"201","messageId":"202","endLine":37,"endColumn":25},{"ruleId":"207","severity":1,"message":"217","line":75,"column":6,"nodeType":"209","endLine":75,"endColumn":12,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":108,"column":21,"nodeType":"239","messageId":"240","endLine":108,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":111,"column":9,"nodeType":"201","messageId":"243","endLine":111,"endColumn":18},{"ruleId":"199","severity":1,"message":"226","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":9,"column":1,"nodeType":"229","endLine":45,"endColumn":2},{"ruleId":"199","severity":1,"message":"230","line":35,"column":15,"nodeType":"201","messageId":"202","endLine":35,"endColumn":19},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'render' is defined but never used.","'IfFirebaseAuthedAnd' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'propOne'. Either include them or remove the dependency array.","ArrayExpression",["246"],"'setUrl' is assigned a value but never used.","'setPurl' is assigned a value but never used.","'purana' is assigned a value but never used.","'setPurana' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'puranas.puranas'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setElements' needs the current value of 'puranas.puranas'.",["247"],"'updateSession' is defined but never used.","'getPage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history' and 'propOne.userId'. Either include them or remove the dependency array.",["248"],"'Main' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'page' is assigned a value but never used.",["244"],["245"],"'FacebookShareCount' is defined but never used.",["249"],["250"],["251"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'container' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"252","fix":"259"},{"desc":"254","fix":"260"},"Update the dependencies array to be: [history, propOne]",{"range":"261","text":"262"},"Update the dependencies array to be: [puranas.puranas, purl]",{"range":"263","text":"264"},"Update the dependencies array to be: [history, propOne.userId]",{"range":"265","text":"266"},{"range":"267","text":"266"},{"range":"268","text":"262"},{"range":"269","text":"264"},[787,789],"[history, propOne]",[2477,2483],"[puranas.puranas, purl]",[1209,1211],"[history, propOne.userId]",[1597,1599],[833,835],[2523,2529]]